import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn import tree
from sklearn.metrics import accuracy_score
#import joblib

music_data = pd.read_csv(r'C:\Users\Alice Yau\Documents\Datasets\MachineLearning\music.csv')

#creates a new data set/data frame without the column specified
#This will be our input set
X = music_data.drop(columns=['genre'])

#This will be our output set
y = music_data['genre']

#split data set into two sets for training and testing. 20% for testing
#randomly chooses data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

#Create new instance of the class Decision Tree Classifier
model = DecisionTreeClassifier()


##train the model
model.fit(X_train, y_train)
#joblib.dump(model, 'music-recommender.joblib')
#model = joblib.load('music-recommender.joblib')

#visualize the decision tree using a dot format (textual language for describing graphs)
tree.export_graphviz(model, out_file='music_recommender.dot',
                     feature_names=['age', 'gender'],
                     class_names=sorted(y.unique()),
                     label='all',
                     rounded=True,
                     filled=True)

#predict with test subset
predictions = model.predict(X_test)
print(predictions)
#How to measure the accuracy of the model
print(accuracy_score(y_test, predictions))
